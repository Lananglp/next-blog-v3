// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  title          String
  content        String
  excerpt        String
  slug           String   @unique
  status         PostStatus
  categories     PostCategory[]
  tags           String[]
  author         User      @relation(fields: [authorId], references: [id])
  authorId       String
  featuredImage  String
  altText        String?   
  commentStatus  CommentStatus
  meta           Json
}

model Category {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  posts     PostCategory[]
}

model PostCategory { 
  postId     String
  categoryId String
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([postId, categoryId])
}

model Profile {
  id          String    @id @default(uuid())
  bio         String?
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  name        String
  password    String
  image       String?
  role        UserRole  @default(USER)
  posts       Post[]
  profile     Profile?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Image {
  id          String    @id @default(uuid())
  url         String
  createdAt   DateTime  @default(now())
}

enum UserRole {
  ADMIN
  USER
}

enum PostStatus {
  PUBLISH
  DRAFT
  PRIVATE
}

enum CommentStatus {
  OPEN
  CLOSED
}